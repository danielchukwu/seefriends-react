// APP.JS
import { BrowserRouter as Router, Route, Routes, useNavigate,   } from 'react-router-dom'
import './index.css'

import Login from './components/pages/Login';
import PostFeed from './components/pages/PostFeed';
import TellsFeed from './components/pages/TellsFeed';
import Activity from './components/pages/Activity';
import UserProfile from './components/pages/UserProfile';
import AddPost from './components/pages/AddPost';
import AddTell from './components/pages/AddTell';
import Saved from './components/pages/Saved';
import FFF from './components/pages/FFF';
import PostSingle from './components/pages/PostSingle';
import TellsSingle from './components/pages/TellsSingle';
import Comment from './components/pages/Comment';
import useGetOwner from './customhooks/useGetOwner';
import { useState, useEffect } from 'react';
import useVariables from './customhooks/useVariables';


function App() {
  // 1. Posts
  const {owner, setOwner} = useGetOwner();
  const [posts, setPosts] = useState()
  const {posts_url, access_token, host_url} = useVariables()
  // const navigate = useNavigate()

  // Logic: Fetch User Post
  useEffect(()=> {
    
    fetch(posts_url, {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${access_token}`
        }
    })
    .then(res => res.json())
    .then(data => {
        if (data.detail){
          throw Error("unknown user")
        }
        setPosts(data);
    })
    .catch(err => {
        if (err.message === "unknown user"){
          console.log(owner)
        }
        console.log(err.message)
    })

  }, [posts_url, access_token])

  useEffect(() => {
    console.log("someChanged")
  }, [posts])






  return (
    <Router>
      <div className="App">
          <Routes>

            <Route path="/login" element={ <Login /> } />

            <Route path="/addpost" element={ <AddPost /> } />
            <Route path="/addtell" element={ <AddTell /> } />

            <Route path="/" element={ <PostFeed posts={posts} setPosts={setPosts} owner={owner} /> } />
            <Route path="/tellsfeed" element={ <TellsFeed /> } />

            <Route path="/posts/:id" element={ <PostSingle /> } />
            <Route path="/tells/:id" element={ <TellsSingle /> } />

            <Route path="/:type/:id/comments" element={ <Comment /> } /> {/* :type = posts, tells */}
            
            <Route path="/users/activity" element={ <Activity /> } />
            <Route path="/users/profile" element={ <UserProfile /> } />
            <Route path="/users/profile/:id" element={ <UserProfile /> } />
            <Route path="/users/profile/saved" element={ <Saved /> } />

            <Route path='users/profile/:id/fff/:page' element={ <FFF />} />
          </Routes>
      </div>
    </Router>
  );
}

export default App;

export const ACTIONS = {
  ADD_POST: "add-post",
  LIKE_POST: "like-post",
  DISLIKE_POST: "dislike-post",
}








// POSTFEED
// imports: main
import { useEffect, useReducer, useState } from 'react';
import { useNavigate } from 'react-router-dom';

// imports: custom hooks
import useVariables from '../../customhooks/useVariables';
import useGetOwner from "../../customhooks/useGetOwner";

// imports: components
import PostList from './PostList';
import HeaderPostFeed from '../headers_footers/HeaderPostFeed';
import Footer from '../headers_footers/Footer';
import { ACTIONS } from '../../App';



const PostFeed = ({ posts, setPosts, owner }) => {
  const navigate = useNavigate()


   console.log(posts)
   return (
      <div className="postfeed">

         <HeaderPostFeed />

         <main className='postfeed margin-b-60'>
            <div className="welcome-user pad-top-10">
               {owner && <h3>Welcome {owner.username}</h3>}
            </div>

            {posts && <PostList posts={posts} setPosts={setPosts}/>}

         </main>

         <Footer />
         
      </div>
   );
}

export default PostFeed;